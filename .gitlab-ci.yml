image: ros:galactic-ros-base-focal

workflow:
  # Only run on master branch and merge requests
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == "master"

variables:
  PROJECT_BASE_DIR: $CI_PROJECT_DIR

stages:
  - lint
  - build

cpplint:
  stage: lint
  image: python:3.8-alpine
  dependencies: []
  before_script:
    - python3 -m pip install cpplint
  script:
    - cpplint --recursive --output=junit . > cpplint-results.xml 2>&1
  variables:
    GIT_SUBMODULE_STRATEGY: none
  artifacts:
    expire_in: 30 days
    reports:
      junit: cpplint-results.xml

build:
  stage: build
  before_script:
    # Install ROS package dependencies
    # - apt-get update -qq
    # Install NotCurses
    #- apt-get install python3-pip -qq -y # install pip for certain rosdep packages
    #- rosdep update -q --rosdistro=$ROS_DISTRO
    #- rosdep install -y -q --from-paths $CI_PROJECT_DIR/src --ignore-src # only choose the required packages
    #- rm -rf /var/lib/apt/lists/*
  script:
    - . /opt/ros/galactic/setup.sh
    - git submodule init
    - git submodule update
    - . $CI_PROJECT_DIR/tools/compile.sh
  variables:
    GIT_STRATEGY: clone
  artifacts:
    expire_in: 30 days
    reports:
      junit: test-results.xml
